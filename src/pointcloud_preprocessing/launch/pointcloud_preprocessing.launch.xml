<launch>
    <arg name="pointCloudTopic" default="/velodyne_points"/>
    <arg name="robot_base_frame" default="base_link"/>
    <arg name="lidarFrame" default="velodyne"/>
    <arg name="sensor" default="velodyne"/>
    <arg name="length" default="4.8"/>
    <arg name="width" default="2.0"/>
    <arg name="height" default="2.0"/>
    <arg name="negative" default="false"/>

    <arg name="min_radius" default="0.01"/>
    <arg name="max_radius" default="100.0"/>
    <arg name="ground_slope" default="3.0"/>
    <arg name="height_threshold" default="0.001"/>
    <arg name="radial_divider_angle" default="0.7"/>

    <arg name="distance_threshold" default="0.2"/>
    <arg name="max_iterations" default="1500"/>
    <arg name="voxel_size" default="0.1"/>
    <arg name="mean_k" default="100"/>
    <arg name="std_dev_thresh" default="10.0"/>
    <arg name="z_max" default="10.0"/>
    <arg name="z_min" default="-1.0 "/>        

    <arg name="cluster_tolerance" default="0.5"/>
    <arg name="min_cluster_size" default="50"/>
    <arg name="max_cluster_size" default="5000"/>
                                                           





    <node pkg="pointcloud_preprocessing" exec="crop_box_filter" name="crop_box_filter_node" output="screen">
        <param name="pointCloudTopic" value="$(var pointCloudTopic)"/>
        <param name="robot_base_frame" value="$(var robot_base_frame)"/>
        <param name="lidarFrame" value="$(var lidarFrame)"/>
        <param name="sensor" value="$(var sensor)"/>
        <param name="length" value="$(var length)"/>
        <param name="width" value="$(var width)"/>
        <param name="height" value="$(var height)"/>
        <param name="negative" value="$(var negative)"/>
    </node>

    <node pkg="pointcloud_preprocessing" exec="ray_ground_classifier" name="ray_ground_classifier_node" output="screen">
        <param name="pointCloudTopic" value="$(var pointCloudTopic)"/>
        <param name="lidarFrame" value="$(var lidarFrame)"/>
        <param name="sensor" value="$(var sensor)"/>
        <param name="min_radius" value="$(var min_radius)"/>
        <param name="max_radius" value="$(var max_radius)"/>
        <param name="ground_slope" value="$(var ground_slope)"/>
        <param name="height_threshold" value="$(var height_threshold)"/>
        <param name="radial_divider_angle" value="$(var radial_divider_angle)"/>
        <!-- <param name="mean_k" value="$(var mean_k)"/>
        <param name="voxel_size" value="$(var voxel_size)"/>
        <param name="std_dev_thresh" value="$(var std_dev_thresh)"/> -->

    </node>

    <node pkg="pointcloud_preprocessing" exec="ransac_filter" name="ransac_filter_node" output="screen">
        <param name="pointCloudTopic" value="$(var pointCloudTopic)"/>
        <param name="lidarFrame" value="$(var lidarFrame)"/>
        <param name="sensor" value="$(var sensor)"/>
        <param name="distance_threshold" value="$(var distance_threshold)"/>
        <param name="max_iterations" value="$(var max_iterations)"/>
        <param name="voxel_size" value="$(var voxel_size)"/>
        <param name="mean_k" value="$(var mean_k)"/>
        <param name="std_dev_thresh" value="$(var std_dev_thresh)"/>
        <param name="z_max" value="$(var z_max)"/>
        <param name="z_min" value="$(var z_min)"/>       
    </node>

    <!-- New Euclidean clustering node -->
    <node pkg="pointcloud_preprocessing" exec="euclidian_cluster" name="euclidian_cluster" output="screen">
        <param name="sensor_type" value="$(var sensor)"/>
        <param name="input_topic" value="$(var pointCloudTopic)/non_ground"/>
        <param name="colored_topic" value="$(var pointCloudTopic)/colored_clusters"/>
        <param name="cluster_tolerance" value="$(var cluster_tolerance)"/>
        <param name="min_cluster_size" value="$(var min_cluster_size)"/>
        <param name="max_cluster_size" value="$(var max_cluster_size)"/>
    </node>
</launch>